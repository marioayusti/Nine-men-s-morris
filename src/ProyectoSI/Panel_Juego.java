package ProyectoSI;

import java.awt.Color;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author Mario A. Yusti
 */
public class Panel_Juego extends javax.swing.JPanel {

    private final ImageIcon backgroundImage;
    private final PuntoGUI[] puntos;
    private AgenteTablero agente;
    private Color colorJugador1;
    private Color colorJugador2;
    private boolean showPoints;

    public Panel_Juego() {
        initComponents();

        this.backgroundImage = new ImageIcon(getClass().getResource("../Assets/Images/tableroBackground.jpg"));

        this.puntos = new PuntoGUI[24];
        this.puntos[0] = new PuntoGUI(0, 58, 50);
        this.puntos[1] = new PuntoGUI(1, 235, 50);
        this.puntos[2] = new PuntoGUI(2, 412, 50);
        this.puntos[3] = new PuntoGUI(3, 412, 232);
        this.puntos[4] = new PuntoGUI(4, 412, 412);
        this.puntos[5] = new PuntoGUI(5, 235, 412);
        this.puntos[6] = new PuntoGUI(6, 58, 412);
        this.puntos[7] = new PuntoGUI(7, 58, 232);
        this.puntos[8] = new PuntoGUI(8, 122, 130);
        this.puntos[9] = new PuntoGUI(9, 235, 130);
        this.puntos[10] = new PuntoGUI(10, 345, 130);
        this.puntos[11] = new PuntoGUI(11, 345, 232);
        this.puntos[12] = new PuntoGUI(12, 345, 332);
        this.puntos[13] = new PuntoGUI(13, 235, 332);
        this.puntos[14] = new PuntoGUI(14, 122, 332);
        this.puntos[15] = new PuntoGUI(15, 122, 232);
        this.puntos[16] = new PuntoGUI(16, 185, 185);
        this.puntos[17] = new PuntoGUI(17, 235, 185);
        this.puntos[18] = new PuntoGUI(18, 283, 185);
        this.puntos[19] = new PuntoGUI(19, 283, 232);
        this.puntos[20] = new PuntoGUI(20, 283, 277);
        this.puntos[21] = new PuntoGUI(21, 235, 277);
        this.puntos[22] = new PuntoGUI(22, 185, 277);
        this.puntos[23] = new PuntoGUI(23, 185, 232);

        this.colorJugador1 = Color.WHITE;
        this.colorJugador2 = Color.BLACK;

        this.showPoints = false;
    }

    public void setAgente(AgenteTablero _agente) {
        this.agente = _agente;
    }

    public void setColorJugador1(Color newColor) {
        this.colorJugador1 = newColor;
    }

    public void setColorJugador2(Color newColor) {
        this.colorJugador2 = newColor;
    }

    public void moverFicha(int idFicha, int idPunto) {
        Thread movimiento;
        if (this.agente.isTurnoJ1()) {
            movimiento = new Thread(new MoverFichaGUI(this.agente.getFichasJugador1().get(idFicha), this.puntos[idPunto], this));
            this.agente.getFichasJugador1().get(idFicha).setIdPunto(idPunto);
        } else {
            movimiento = new Thread(new MoverFichaGUI(this.agente.getFichasJugador2().get(idFicha), this.puntos[idPunto], this));
            this.agente.getFichasJugador2().get(idFicha).setIdPunto(idPunto);
        }
        movimiento.start();
        try {
            movimiento.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(Panel_Juego.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void colocarFicha(int idPunto) {
        if (this.agente.isTurnoJ1()) {
            this.agente.getFichasJugador1().add(new FichaGUI(this.puntos[idPunto].getX(), this.puntos[idPunto].getY(), idPunto));
        } else {
            this.agente.getFichasJugador2().add(new FichaGUI(this.puntos[idPunto].getX(), this.puntos[idPunto].getY(), idPunto));
        }
        repaint();
    }

    public void ShowPoints(boolean show) {
        this.showPoints = show;
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        g.drawImage(this.backgroundImage.getImage(), 0, 0, this.getWidth(), this.getHeight(), this);
        g.setColor(this.colorJugador1);
        this.agente.getFichasJugador1().stream().forEach((ficha) -> {
            g.fillOval(ficha.getX(), ficha.getY(), 20, 20);
        });
        g.setColor(this.colorJugador2);
        this.agente.getFichasJugador2().stream().forEach((ficha) -> {
            g.fillOval(ficha.getX(), ficha.getY(), 20, 20);
        });
        if (this.agente.isTurnoJ1()) {
            g.setColor(this.colorJugador1);
        }
        g.fillOval(120, 5, 20, 20);
        g.setColor(Color.WHITE);
        g.drawString("Turno: Jugador " + (this.agente.isTurnoJ1() ? 1 : 2), 20, 20);
        g.drawString("Jugador 1: " + this.agente.getNumeroFichasJ1(), 330, 20);
        g.drawString("Jugador 2: " + this.agente.getNumeroFichasJ2(), 410, 20);
        if (this.showPoints) {
            g.setColor(Color.BLACK);
            for (int i = 0; i < 24; i++) {
                g.drawString(i + "", this.puntos[i].getX(), this.puntos[i].getY());
                //g.fillOval(this.puntos[i].getX(), this.puntos[i].getY(), 20, 20);
            }
        }
    }
}
